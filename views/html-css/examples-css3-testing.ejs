  <section class="container-fluid main-content">
    <h2>CSS3 "Testing" Examples</h2>
    <p>Below are examples of "Testing" CSS (from <a href="https://www.w3.org/Style/CSS/current-work" target="demo_window">https://www.w3.org/Style/CSS/current-work</a>).</p>
    <ul class="bulleted">
      <li>
        <h3><a href="javascript:;" data-toggle="collapse" data-target="#backgroundsAndBorders" aria-expanded="false" aria-controls="backgroundsAndBorders">Flexible Box Layout</a></h3>
        <div class="collapse in" id="backgroundsAndBorders">
          <div class="well">
            <p>The examples of backgrounds and borders may look familiar because they are also on the <a href="/html-css/examples-css3-stable">CSS3 "Stable" Examples</a> page. They are spaced and aligned using the CSS flexbox rules.
            <ul class="linear-gradient">
              <h4>Background: Linear gradient</h4>
              <li>
                <span class="top-to-bottom">
                  <p>Top to bottom</p>
                </span>
                <span class="left-to-right">
                  <p>Left to right</p>
                </span>
                <span class="diagonal-to-right">
                  <p>Diagonal to right</p>
                </span>
                <span class="angle">
                  <p>25 degree angle</p>
                </span>
                <span class="multiple-stops">
                  <p>Multiple color stops</p>
                </span>
              </li>
            </ul>
            <ul class="border-example">
              <h4>Background: Borders</h4>
              <li>
                <span class="rounded-corners-color">
                  <p>Rounded corners with background color</p>
                </span>
                <span class="oval">
                  <p>Empty oval</p>
                </span>
                <span class="circle">
                  <p>Circle with image</p>
                </span>
              </li>
            </ul>
          </div>
        </div>
      </li>
      <li>
        <h3><a href="javascript:;" data-toggle="collapse" data-target="#cssTextDecorationModuleLevel3" aria-expanded="false" aria-controls="cssTextDecorationModuleLevel3">CSS Text Decoration Module Level 3</a></h3>
        <div class="collapse" id="cssTextDecorationModuleLevel3">
          <div class="well">
            <p></p>
            <ul class="bulleted">
              <li class="text-decoration-dashed-red"><a href="javascript:;">This link has a red dashed underline if your browser supports styling the text-decoration.</a> (Try Firefox or Chrome with "experimental Web Platform features" turned on in chrome://flags)</li>
              <li class="text-decoration-dotted-green"><a href="javascript:;">This link has a green dotted underline if your browser supports styling the text-decoration.</a></li>
            </ul>
          </div>
        </div>
      </li>
      <li>
        <h3><a href="javascript:;" data-toggle="collapse" data-target="#cssWritingModesLevel3" aria-expanded="false" aria-controls="cssWritingModesLevel3">CSS Writing Modes Level 3</a></h3>
        <div class="collapse" id="cssWritingModesLevel3">
          <div class="well">
            <p></p>
            <ul class="bulleted">
              <li>This is in the default writing mode which is horizontal top to bottom.</li>
              <li class="vertical-rl">This is in the vertical-rl writing mode which is vertical right to left and would be useful for non-English languages. For English it would likely be used for aesthetic reasons.</li>
              <li class="vertical-lr">This is in the vertical-lr writing mode which is vertical left to right and would also be useful for non-English languages.</li>
            </ul>
          </div>
        </div>
      </li>
      <li>
        <h3><a href="javascript:;" data-toggle="collapse" data-target="#cssShapesLevel1" aria-expanded="false" aria-controls="cssShapesLevel1">CSS Shapes Level 1</a></h3>
        <div class="collapse" id="cssShapesLevel1">
          <div class="well">
            <p>CSS Shapes provides rules for shaping text.</p>
            <ul class="bulleted">
              <li class="left-shape-outside">
                <span></span>
                <p>The shape rules work along with floats to provide a shape of text. For example, this text is next to an angled shape defined by the "shape-outside" rule and is floated left.</p>
              </li>
              <li class="left-right-shape-outside">
                <span class="right-shape"></span>
                <span class="left-shape"></span>
                <p>And this text is next to angled shapes in both sides, defined by the "shape-outside" rule with one floated left and one floated right.</p>
              </li>
              <li class="circle-shape">
                <span class="left-shape"></span>
                <p>And this text is next to a circle on the left. In order to see the effect of this there has to be a lot of text. Again the shaped element has to be floated to the left or the right and the text aligns next to the shape.</p>
              </li>
              <li class="circle-shape-image">
                <p><img class="left-shape" src="/img/html-css/oscar-with-glasses.png"/> The shape can even come from an image. The "shape-outside" rule basically says that a shape will be made outside of the image and you use the "shape-image-threshold" to specify the amount of opacity in the image to determine the shape outline. <a href="https://www.html5rocks.com/en/tutorials/shapes/getting-started/" target="demo_window">https://www.html5rocks.com/en/tutorials/shapes/getting-started/</a> is a great article for learning to do this and <a href="http://blogs.adobe.com/webplatform/2014/03/11/add-shape-and-depth-to-your-layout-with-photoshop-and-css-shapes/" target="demo_window"> explains how to prep the image.</p>
              </li>
            </ul>
          </div>
        </div>
      </li>
      <li>
        <h3><a href="javascript:;" data-toggle="collapse" data-target="#cssMaskingLevel1" aria-expanded="false" aria-controls="cssMaskingLevel1">CSS Masking Level 1</a></h3>
        <div class="collapse" id="cssMaskingLevel1">
          <div class="well">
            <p></p>
            <ul class="bulleted">
              <li class="mask-image">
                <p><img src="/img/html-css/oscar-with-glasses.png"/> Creating a mask for an image is tricky right now and has poor support (from my experience). I got this mask to work in Chrome. Check out <a href="https://www.html5rocks.com/en/tutorials/masking/adobe/" target="demo_window">https://www.html5rocks.com/en/tutorials/masking/adobe/</a> for help with this.</p>
              </li>
            </ul>
          </div>
        </div>
      </li>
      <li>
        <h3><a href="javascript:;" data-toggle="collapse" data-target="#cssCounterStylesLevel3" aria-expanded="false" aria-controls="cssCounterStylesLevel3">CSS Counter Styles Level 3</a></h3>
        <div class="collapse" id="cssCounterStylesLevel3">
          <div class="well">
            <p>This level of counter style introduces the "@counter-style" rule that allows you to define your own counter style for the CSS list-marker and generated content counters for ordered lists.</p>
            <p>One example I thought looked useful was that for footnote markers. It lets you define the footnote symbols and then uses and repeats them as needed. (Here's another one you may need to try in Firefox.)</p>
            <ol class="footnote-list">
              <li>1st footnote</li>
              <li>2nd footnote</li>
              <li>3rd footnote</li>
              <li>4th footnote</li>
              <li>5th footnote</li>
              <li>6th footnote</li>
            </ol>
          </div>
        </div>
      </li>
      <li>
        <h3><a href="javascript:;" data-toggle="collapse" data-target="#cssFragmentationLevel3" aria-expanded="false" aria-controls="cssFragmentationLevel3">CSS Fragmentation Level 3</a></h3>
        <div class="collapse" id="cssFragmentationLevel3">
          <div class="well">
            <p>CSS Fragmentation refers to how breaks are controlled in the flow of text and involves the "break-before" and "break-after" properties. However, the experimental values of "region", "recto", "verso", and "avoid-region" do not have any browser support (<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/break-after" target="demo_window">https://developer.mozilla.org/en-US/docs/Web/CSS/break-after</a>).</p>
            <p>I was able to find a related CSS property that is experimental, but has browser support and that is "box-decoration-break." Its initial value is "slice" and it applies to the "background", "padding", "border", "border-image", "box-shadow", "margin" and "clip" properties.</p>
            <ul class="bulleted box-decoration-break">
              <li class="inline-example"><span>This inline element has<br>the default box-decoration-break.</span></li>
              <li class="inline-example clone"><span>This inline element has<br>box-decoration-break set to "clone."</span></li>
              <li class="block-example"><span>This block<br>element has<br>the default box-decoration-break.</span></li>
              <li class="block-example clone"><span>This block<br>element has<br>box-decoration-break set to "clone."</span>
              <li>According to <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/box-decoration-break" target="demo_window">https://developer.mozilla.org/en-US/docs/Web/CSS/box-decoration-break</a> the block clone example above should have each line in a pill-like container. Something must have changed in the implementation since they made their examples because even their live example does not look like the images in their description (<a href="https://mdn.mozillademos.org/files/8187/box-decoration-break-block.html" target="demo_window">https://mdn.mozillademos.org/files/8187/box-decoration-break-block.html</a>).</li></li>
            </ul>
          </div>
        </div>
      </li>
      <li>
        <h3><a href="javascript:;" data-toggle="collapse" data-target="#cssGridLayoutLevel1" aria-expanded="false" aria-controls="cssGridLayoutLevel1">CSS Grid Layout Level 1</a></h3>
        <div class="collapse" id="cssGridLayoutLevel1">
          <div class="well">
            <p>I have been avoiding creating examples of CSS experimental rules that are not easily seen in a browser (without turning on special features). However, the grid layout feels like something that will have a big impact on how we style web pages and I am anxious to learn it now. However, this means that as of today (12 Oct 2016) you will have to turn on the support in Chrome or Firefox (see <a href="https://css-tricks.com/snippets/css/complete-guide-grid/" target="demo_window">https://css-tricks.com/snippets/css/complete-guide-grid/</a> under "Basics and Browser Support") which may mean restarting your browser.</p>
            <ul class="bulleted">
              <li class="explicit-grid">
                <h4>This is a grid that is templated with named areas.</h4>
                <div class="grid-template">
                  <div class="top-left">Top left</div>
                  <div class="top">Top</div>
                  <div class="top-right">Top right</div>
                  <div class="middle-left">Middle left</div>
                  <div class="middle">Middle</div>
                  <div class="middle-right">Middle right</div>
                  <div class="bottom-left">Bottom left</div>
                  <div class="bottom">Bottom</div>
                  <div class="bottom-right">Bottom right</div>
                </div>
                <h4>This is a grid that is created with shorthand column and row properties.</h4>
                <div class="grid-repeat">
                  <div class="top-left">Top left</div>
                  <div class="top">Top</div>
                  <div class="top-right">Top right</div>
                  <div class="middle-left">Middle left</div>
                  <div class="middle">Middle</div>
                  <div class="middle-right">Middle right</div>
                  <div class="bottom-left">Bottom left</div>
                  <div class="bottom">Bottom</div>
                  <div class="bottom-right">Bottom right</div>
                </div>
                <h4>This is a grid that shows how a named template could be used to provide the layout for a web page.</h4>
                <div class="grid-template-page">
                  <div class="header">Header</div>
                  <div class="body">Body</div>
                  <div class="sidebar-right">Right Sidebar</div>
                  <div class="footer">Footer</div>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </li>
    </ul>
  </section>

<%- contentFor('pageName') %>
cssTestingExamples

<%- contentFor('cssTestingExamples') %>
active
