  <section class="container-fluid device-access light-theme">
    <h2>HTML Device Access (if an option doesn't show, the device doesn't allow it)</h2>
    <p>Firefox seems to work best on a desktop/laptop.</p>
    <ul class="bulleted">
<!--       <li>Touch Events <button></button></li> -->
      <li class="geolocation-supported">Geolocation <button onclick="javascript:getLocation()">Get location</button> <span></span></li>
      <li class="device-orientation">Device Orientation <button class="turn-on" onclick="javascript:turnOnDeviceOrientation(true)">Turn On</button> <button class="turn-off hide" onclick="javascript:turnOnDeviceOrientation(false)">Turn Off</button></li>
      <li class="vibrate-supported">Vibration <button onclick="javascript:vibrateDevice()">Vibrate Device</button> <span class="vibrate">vibrating...</span></li>
      <li class="ambient-light">Ambient Light Adjustment <button class="turn-on" onclick="javascript:turnOnAmbientLightAdjustment(true)">Turn On</button> <button class="turn-off hide" onclick="javascript:turnOnAmbientLightAdjustment(false)">Turn Off</button></li>
<!--       <li>Proximity <button></button></li> -->
      <li class="battery-supported">Battery Status <button onclick="javascript:showBatteryStatus()">Show Battery Status</button> <span></span></li>
    </ul>
  </section>

  <script>
    function adjustAmbientLighting(event) {
      var ambientLightValue = event.value;

      console.log(ambientLightValue);

      if (ambientLightValue < 35) {
        $(".device-access").removeClass('light-theme');
        $(".device-access").addClass('dark-theme');
      }
      else {
        $(".device-access").addClass('light-theme');
        $(".device-access").removeClass('dark-theme');
      }
    }

    function turnOnAmbientLightAdjustment(turnOn) {
      var turnOn = turnOn || false;

      if (turnOn) {
        window.addEventListener('devicelight', adjustAmbientLighting);
      }
      else {
        window.removeEventListener('devicelight', adjustAmbientLighting);
      }
      $(".ambient-light .turn-on").toggleClass('hide');
      $(".ambient-light .turn-off").toggleClass('hide');
    }

    function reactToDeviceOrientation(event) {
      var deviceOrientation = {
        absolute: event.absolute || "",
        alpha: event.alpha || "",
        beta: event.beta || "",
        gamma: event.gamma || ""
      };

      console.log(deviceOrientation);
      $(".device-orientation span").html("Device is now: " + deviceOrientation.absolute);
    }

    function turnOnDeviceOrientation(turnOn) {
      var turnOn = turnOn || false;

      if (turnOn) {
        window.addEventListener('devicelight', reactToDeviceOrientation);
      }
      else {
        window.removeEventListener('devicelight', reactToDeviceOrientation);
      }
      $(".device-orientation .turn-on").toggleClass('hide');
      $(".device-orientation .turn-off").toggleClass('hide');
    }

    function showLocation(latitude, longitude) {
      var latitude = latitude || "";
      var longitude = longitude || "";

      console.log("Latitude: ", latitude);
      console.log("Longitude: ", longitude);

      $(".geolocation-supported span").html("Latitude: " + latitude + " / Longitude: " + longitude);
      window.setTimeout(function() {
        $(".geolocation-supported span").html("");
      }, 5000);
    }

    function getLocation() {
      navigator.geolocation.getCurrentPosition(function(position) {
        showLocation(position.coords.latitude, position.coords.longitude);
      });
    }

    function showBatteryStatus() {
      var batteryStatus = navigator.battery.charging;
      var batteryLevelText = Math.floor(navigator.battery.level * 100) + "%";
      var batteryStatusText = (batteryStatus ? "charging..." : "discharging...");

      console.log( "battery level: ", batteryLevelText);
      console.log( "device is ",  batteryStatusText);

      $(".battery-supported span").html(batteryLevelText + " " + batteryStatusText);
      window.setTimeout(function() {
        $(".battery-supported span").html("");
      }, 1000);
    }

    function vibrateDevice() {
      console.log("vibrating");
      navigator.vibrate(1000);
      $(".vibrate-supported span").toggleClass("vibrating");
      window.setTimeout(function() {
        $(".vibrate-supported span").toggleClass("vibrating");
      }, 1000);
    }

    // enable battery support
    navigator.battery = navigator.battery || navigator.webkitBattery || navigator.mozBattery || navigator.msBattery;

    // navigator.battery = {
    //   charging: true,
    //   level: 0.34
    // };

    if (!navigator.battery) {
      // battery API not supported
      $(".battery-supported").addClass("hide");
    }

    // enable geolocation support
    if ("geolocation" in navigator) {
      // geolocation is available
    } else {
      // geolocation IS NOT available
      $(".geolocation-supported").addClass("hide");
    }

    // enable vibration support
    navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate;

    if (!navigator.vibrate) {
      // vibration API not supported
      $(".vibrate-supported").addClass("hide");
    }
  </script>

<%- contentFor('pageName') %>
deviceAccess

<%- contentFor('deviceAccess') %>
active
